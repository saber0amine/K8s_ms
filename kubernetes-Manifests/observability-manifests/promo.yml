apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'customer-service'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 5s
        static_configs:
          - targets: ['http://customer-service:8081']
            labels:
              application: 'My Customer App Service Application'
    
      - job_name: 'inventory-service'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 5s
        static_configs:
          - targets: ['http://inventory-service:8082']
            labels:
              application: 'My Inventory Service Application'
    
      - job_name: 'order-service'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 5s
        static_configs:
          - targets: ['http://order-service:8083']
            labels:
              application: 'My Order Service Application'


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image:  prom/prometheus
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
      volumes:
        - name: config
          configMap:
            name: prometheus-config


---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  type: LoadBalancer
  externalIPs:
    - 192.168.49.2
  ports:
    - port: 80
      targetPort: 9090
      protocol: TCP
      nodePort: 32000
  selector:
    app: prometheus
